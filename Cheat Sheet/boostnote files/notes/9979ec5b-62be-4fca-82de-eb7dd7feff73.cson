createdAt: "2018-04-25T08:24:28.386Z"
updatedAt: "2018-04-25T09:53:19.087Z"
type: "MARKDOWN_NOTE"
folder: "45b0680f0adbe2a3da40"
title: "- Docker -"
content: '''
  <div align="center">
  
  # - Docker -
  ### For Windows 10 in PowerShell
  </div>
  <div align="justify">
  
  >### Wyświetlenie obrazów
  >>      docker images
  >>      docker image ls
  >> Dzięki tym poleceniom można sprawdzić jakie obrazy kontenerów są dostępne na naszej maszynie.
  >
  >### Uruchomienie kontenera
  >>      docker run -it -rm <nazwa kontenera>:<wersja>
  >> Powyższy zapis umożliwi odpalenie kontenera. Wskazania `-it` oznaczają to samo co `-i -t` czyli `interactive terminal`, bez tego kontener by się uruchomił ale nie otworzył nam terminalu. Następnie pisząc `--rm` ustawiamy usunięcie kontenera po wyjściu z teminala, inaczej nawet po zamknięciu, kontener by działał w tle lub został wstrzymany. A poniżej przykład:
  >> 
  >>      docker run -it --rm toja/mojubuntu:latest
  >>      
  >### Lokalne budowanie kontenera
  >>      docker build -t <nazwa obrazu> <ściżka do folderu z plikiem>
  >>Budujemy kontener podając nazwę i ścieżkę, a to `-t` to nie wiem po co ale potrzebne. Przykładowo:
  >>      
  >>      docker build -t mojobraz C:\\mojobraz
  >>      
  >### Czyszczenie pozostałości po kontenerach
  >>      docker system prune
  >>Usuwa pozostałości po kontenerach, np. po nieudanym budowaniu, gdy w `images` widać `<none>`
  
  </div>
'''
tags: []
isStarred: false
isTrashed: false
