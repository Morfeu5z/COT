createdAt: "2018-04-20T08:40:41.910Z"
updatedAt: "2018-04-20T12:31:56.577Z"
type: "MARKDOWN_NOTE"
folder: "45b0680f0adbe2a3da40"
title: "- Markdown -"
content: '''
  <center>
  
  # - Markdown -
  ### For .md file
  #### Markdown pozwala na proste tworzenie notatek za pomocą znaczników własnych jak i html'a.
  </center>
  
  ### Cheet Sheet:
  >#### Zacznijmy od tego, że nie wszystko działa:
  >>1. Style `css` działają w boostnote, ale nie na githubie.
  >>2. Nie zawsze `HTML` działa z plikiem `README.md`, by zadziałało trzeba wkleić do github wiki zawartość roboczą, zapisać i przekopiować z wiki do `README.md`
  >>    Dlaczego? Nie wiem. Ale działa :+1:
  >
  >#### Emoji
  >>      :point_right::ok_hand::rage:
  >> Wyświetli takie oto emoji: :point_right::ok_hand::rage:
  >> [Lista dostępnych emoji](https://gist.github.com/rxaviers/7360908)
  >
  >#### Nagłówki:
  >>      ### Tekst
  >> Im więcej `#` tym mniejszy nagłówek, czyli `# Tekst` to to samo co `<h1>Tekst</h1>`.
  >
  >#### Linie kodu
  >>      `<some code>`
  >> Używając `'`, to ten znak tam gdzie ` ~ `, możemy wypisywać linie kodu i będzie wyglądało to tak: `<some code>`
  > 
  >#### Wyświetlenie obrazu
  >>      ![something](http://link/do/mojego/zdjecia.jpg)
  >> Takim sposobem sprawimy, że obraz pojawi się w naszym dokumencie.
  > 
  >#### Link odsyłający
  >>      [Nazwa linku](http://link/do/mojego/zdjecia.jpg)
  >> Usuwając z początku `!` sprawiamy, że pojami się link pod taką nazwą jaką wpiszemy pomiędzy `[ ... ]`
  > 
  >#### Wyśrodkowanie
  >>      <div align="center">
  >>      
  >>      ## My Title with Markdown
  >>      </div>
  >> Taki zapis pozwoli na przesunięcie tekstu w div'ie na środek.
  >> :warning: Uwaga: między div'em, a znacznikiem markdown musi być linia przerwy inaczej markdown nie zostanie poprawnie zinterpretowany.
  
  
  
  .
  .
  End
'''
tags: []
isStarred: false
isTrashed: false
